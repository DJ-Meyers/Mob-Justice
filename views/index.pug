//- 
//- 	Index.pug
//- 
//- 	This is the home page for this project. It is configured to auto-connect
//- 	to the server's websocket and handle any events fired from the server end.
//-

extends base

//- The visual portion of the page
block content
    div.vertical-center#landing
        div.btn-group-vertical.btn-group-lg.btn-block
            button.btn.btn-primary.btn-lg.btn-block.btn-main#createBtn Create Game
            button.btn.btn-secondary.btn-lg.btn-block.btn-main#joinBtn Join Game

    div#createDiv.hidden
        div.notAForm#createForm
            div.form-group
                label(for="name") Your Name
                input.form-control#createName(placeholder="Name" name="name")
            button.btn.btn-primary.btn-block#createSubmit Create Game

    div#joinDiv.hidden
        div.notAForm#joinForm
            div.form-group
                label(for="name") Name
                input.form-control#joinName(type="text", placeholder="Your Name", name="name")
            div.form-group
                label(for="roomId") Room ID
                input.form-control#joinCode(type="text", placeholder="Room ID", name="roomCode")
            div.form-group
                button.btn.btn-primary.btn-block.btn-main#joinSubmit Join Game

    div#gameRoom.hidden
        div.card
            div.card-block
                h4.card-title.alert.alert-info.align-middle#roomCodeTitle(role="alert")
                    p
                        strong Room Code: 
                        span#roomCodeSpan
                        span#phase  - Game Lobby
                    p#instruction The leader can start the game when everyone is in the lobby.
            ul.list-group.align-middle.list-group-flush#gamePlayerList
            div.card-block#voteButtonDiv
                button.btn.btn-primary.btn-block#voteButton(type="button")
    //-         
    //- div.hidden#day
    //-     div.card
    //-         div.card-block
    //-             h4.card-title.alert.alert-info.align-middle.roomCodeTitle(role="alert")
    //-                 strong Room Code: 
    //-                 span.roomCodeSpan
    //-                 span.phase - Day
    //-         ul.list-group.align-middle.list-group-flush#dayPlayerList
    //-         div.card-block#daySubmitButton
    //-     
    //- div#dayWaitingRoom.hidden
    //-     div.card.text-center.mid
    //-         div.card-block
    //-             h4.card-title Special title treatment
    //-                 p.card-text With supporting text below as a natural laed-in to additional context
    //-                     button.btn.btn-primary(type="button" data-toggle="collapse" data-target="#collapseExample" aria-expended="false" aria-controls="collapseExample") 
    //-                     div.collapse#collapseExample Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident.
    //- 
    //- div#votingRoom.hidden
    //-     div.card.middle-align.mid 
    //-         div.card-block
    //-             h4.card-title.alert.alert-info.align-middle(role="alert") This alert needs your attention, but it's not super important.
    //-         ul.list-group.align-middle.list-group-flush#playerList
    //-         div.card-block
    //-             button.btn.btn-outline-primary#submit(type="button") Submit

    script(type="text/javascript", src="/socket.io/socket.io.js")
    script(type="text/javascript", src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js")
    script(type="text/javascript").
        var socket = io.connect();

        //----------------------------------------------------
        // JQuery object Initialization
        //----------------------------------------------------

        //Landing View
        var landing 			=	$('#landing');
            var createBtn 		=	$('#createBtn');
            var joinBtn			=	$('#joinBtn');

        //Create game View
        var createDiv			=	$('#createDiv');
            var createName		= 	$('#createName');
            var createSubmit	=	$('#createSubmit');

        //Join game View
        var joinDiv				=	$('#joinDiv');
            var joinName		=	$('#joinName');
            var joinCode		=	$('#joinCode');
            var joinSubmit		=	$('#joinSubmit');

        //Actual Game View
        var gameRoom			=	$('#gameRoom');
            var roomCodeTitle   =   $('#roomCodeTitle');
            var roomCodeSpan	=	$('#roomCodeSpan');
            var phase           =   $('#phase');
            var instruction     =   $('#instruction');
            var gamePlayerList	=	$('#gamePlayerList');
            var voteButton      =   $('#voteButton');

        //Variables used to enact game Logic
        var roomCode = "", name = "", target = " ";


        //----------------------------------------------------
        // Create/Join Game Logic
        //----------------------------------------------------

        //Functions for switching to Create/Join View
        createBtn.click(function() {
            createDiv.removeClass('hidden').addClass('vertical-center');
            landing.addClass('hidden').removeClass('vertical-center');
        });

        joinBtn.click(function() {
            joinDiv.removeClass('hidden').addClass('vertical-center');
            landing.addClass('hidden').removeClass('vertical-center');
        });

        //Functions for creating/joining games.  Create/Join logic is handled on server
        createSubmit.click(function() {
            roomCode = createRoomCode();
            name = createName.val();

            createDiv.removeClass('vertical-center').addClass('hidden');
            gameRoom.addClass('long-content').removeClass('hidden');

            console.log(name + " attempting to join " + roomCode);
            socket.emit('create', roomCode, name);

            roomCodeSpan.text(roomCode);

            voteButton.text('Start Game');
            voteButton.click(function() {
                console.log('sending startGame');
                socket.emit('startGame', roomCode);

            });
        });

        joinSubmit.click(function() {
            //moved this part up here so it joins you to room before printing out people in room
            console.log(name + " attempting to join " + roomCode);
            socket.emit('join', joinCode.val(), joinName.val());
            //socket.emit('getUsers',joinCode.val(),joinName.val());
        });
        socket.on('successJoin', function(username, host) {
            roomCode = joinCode.val();
            name = joinName.val();

            joinDiv.removeClass('vertical-center').addClass('hidden');
            gameRoom.addClass('long-content').removeClass('hidden');

            //moved this part up here so it joins you to room before printing out people in room
            socket.emit('getUsers',roomCode,name)
            roomCodeSpan.text(roomCode);

            voteButton.prop("disabled", true);
            voteButton.text('Wait on leader to start');
            voteButton.click(function() {

                console.log('Do Nothing');

            });
        });

        //----------------------------------------------------
        // Socket logic
        //----------------------------------------------------

        //When a new user connects to the room you're in, add them to the playerList
        socket.on('newUser', function(username, host) {
            console.log(name+" and username: "+username);
            if(host===true || name!==username){
                addUserToGamePlayerList(username);
            }
            });

        socket.on('failedToCreate', function() {
            console.log("this got called");
            //roomCode = " ";
            //$('#joinDiv').find('form')[0].reset();
            joinDiv.removeClass('vertical-center').addClass('hidden');
            landing.addClass('vertical-center').removeClass('hidden');

            });

        //When you join a game, get the list of players already in the game and add them to the playerList
        socket.on('usersList', function( names, username ){
            if(username===name){
                for(var i = 0;i<names.length;++i){
                    addUserToGamePlayerList(names[i]);
                }
            }         
        });
        socket.on('onCreate', function(msg) {
            console.log("got pinged "+ msg);
        });
        //When the server responds to the request to start the game
        socket.on('gameStarted', function(userStatuses) {
            console.log('Game starting');
            $('.badge-pill').remove();

            $('.list-group-item').addClass('list-group-item-action');


            //Change phase to day
            beginDay(userStatuses);
            });
        //socket.on('gameStarted', function() {
        //    console.log('Game starting');
        //this pulls everyone into the day room when game starts
        //    waitingRoom.removeClass('long-content').addClass('hidden');
        //        dayWaitingRoom.addClass('vertical-center').removeClass('hidden');

        //    });   

        //- joinVoting.click(function() {
        //- 
        //-     waitingRoom.removeClass('vertical-center').addClass('hidden');
        //-     votingRoom.addClass('vertical-center').removeClass('hidden');
        //- 
        //-     if(init===false){
        //-         console.log("here");
        //-         var listGroup = document.getElementById('playerList');
        //-         for(var p = 0; p < playerList.length; p++) {
        //-             var thisPlayer = document.createElement('li');
        //-             thisPlayer.classList.add('list-group-item','list-group-item-action');
        //- 
        //-             if(playerList[p].status === "dead") {
        //-                 thisPlayer.classList.add('disabled');
        //-             }
        //- 
        //-             thisPlayer.appendChild(document.createTextNode(playerList[p].name));
        //-             thisPlayer.addEventListener('click', function() {
        //-                 /*Anything active make inactive*/
        //-                 if(!this.classList.contains('disabled')) {
        //-                     var currentActive = document.querySelectorAll('.active');
        //-                     for(var j = 0; j < currentActive.length; j++){
        //-                         currentActive[j].classList.remove('active');
        //-                     }
        //- 
        //- 
        //-                     this.classList.add('active');
        //- 
        //-                     target = this.innerHTML;
        //-                     console.log(target);
        //-                 }
        //- 
        //-             });
        //-             listGroup.appendChild(thisPlayer);
        //-             init = true;
        //-         }
        //-     }
        //- 
        //- });

        //----------------------------------------------------
        // Helper Functions
        //----------------------------------------------------

        //Add a player to the list and display them in the input group        
        function addUserToGamePlayerList(username) {
            //- console.log("this is called");
            var thisPlayer = document.createElement('li');
            thisPlayer.classList.add('list-group-item','justify-content-between');
            thisPlayer.appendChild(document.createTextNode(username));
            if(gamePlayerList.children().length === 0) {
                var leaderBadge = document.createElement('span');
                leaderBadge.classList.add('badge','badge-success','badge-pill');
                leaderBadge.appendChild(document.createTextNode('Leader'));
                thisPlayer.appendChild(leaderBadge);
            }

            gamePlayerList.append(thisPlayer);
        }

        //Generate a random 4 Letter code
        function createRoomCode() {
            var code = "";
            for(var i = 0; i < 4; i++) {
                var letter = String.fromCharCode(Math.random() * (26) + 65);
                code += letter;
            }
            //- console.log(code);
            return code;
        }

        //Is the user with <name> alive?
        function isAlive(name, userStatuses) {
            for(var i = 0; i < userStatuses.length; i++) {
                if(userStatuses[i].name === name) {
                    console.log(userStatuses[i].name + ": " + userStatuses[i].alive);
                    return (userStatuses[i].alive);
                }
            }
            return false;
        }


        //----------------------------------------------------
        // Game Logic
        //----------------------------------------------------

        //Begin Day phase of game
        function beginDay(userStatuses) {

            //Replace Phase with Day, change instruction, and change Alert Color
            phase.text(' - Day');
            instruction.text("The day will end when a majority votes to kill a member of the the town.  Click on a player's name then press the submit button to vote for that person.  The citizens win if all mafia members have been killed.");
            roomCodeTitle.removeClass('alert-info').addClass('alert-success');

            //Remove eventListeners and disabled status on button for everyone except the dead
            voteButton.off('click');
            voteButton.text('Vote');

            //Add the on click function for all users in the list group to select and target them
            $('.list-group-item').click(function() {
                $('.active').removeClass('active');

                $(this).addClass('active');
                target = $(this).text();
                console.log('Target: ' + target);
            });

            //For each user, disable the their list group item if they're dead
            $('.list-group-item').each(function() {
                if(!isAlive($(this).text(), userStatuses)) {
                    $(this).addClass('disabled');
                    $(this).off('click');
                }
            });

            //If this person is alive, allow them to vote
            if(isAlive(name, userStatuses)) {
                voteButton.prop('disabled', false);
                //Prevent users from voting more than once.
                voteButton.one('click', function() {
                    console.log('Voting for ' + target);
                    $('.active').removeClass('active');
                    $('.list-group-item').addClass('disabled');

                    $('.list-group-item').off('click');

                    instruction.text('Your vote has been submitted.  Waiting on others.');

                    socket.emit('voteDay', roomCode, name, target);
                    voteButton.addClass('disabled');
                });
            }        
        }
